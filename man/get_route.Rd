% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_route.R
\name{get_route}
\alias{get_route}
\title{GetRoute}
\usage{
get_route(origin, destination, mode = c("driving", "walking", "bicycling",
  "transit"), departure_time = NULL, waypoints = NULL,
  alternatives = FALSE, avoid = NULL, units = c("metric", "imperial"),
  traffic_model = NULL, transit_mode = NULL, key = NULL,
  output_format = c("data.frame", "JSON"))
}
\arguments{
\item{origin}{numeric Vector of lat/lon coordinates, or an address string}

\item{destination}{numeric Vector of lat/lon coordinates, or an address string}

\item{mode}{string. One of 'driving', 'walking', 'bicycling' or 'transit'.}

\item{departure_time}{POSIXct. Specifies the desired time of departure. Must be in the future (i.e. greater than \code{sys.time()}). If no value is specified it defaults to \code{Sys.time()}}

\item{waypoints}{list of waypoints, expressed as either a \code{vector} of lat/lon coordinates, or a \code{string} address to be geocoded. Only available for transit, walking or bicycling modes. Name the list element 'via' to avoid including a stopover for a waypoint. See \url{https://developers.google.com/maps/documentation/directions/intro#Waypoints} for details}

\item{alternatives}{logical If set to true, specifies that the Directions service may provide more than one route alternative in the response}

\item{avoid}{character Vector stating which features should be avoided. One of 'tolls', 'highways', 'ferries' or 'indoor'}

\item{units}{string metric or imperial. Note: Only affects the text displayed within the distance field. The values are always in metric}

\item{traffic_model}{string One of 'best_guess', 'pessimistic' or 'optimistic'. Only valid with a departure time}

\item{transit_mode}{vector of strings, either 'bus', 'subway', 'train', 'tram' or 'rail'. Only vaid where \code{mode = 'transit'}. Note that 'rail' is equivalent to \code{transit_mode=c("train", "tram", "subway")}}

\item{key}{string A valid Google Developers Directions API key}

\item{output_format}{string Either 'data.frame' or 'JSON'}
}
\value{
Either data.frame or JSON string of the route between origin and destination
}
\description{
Uses Google Maps Directions API to search for the route between an origin and destination.
}
\examples{
\dontrun{
## using lat/long coordinates
get_route(origin = c(-37.8179746, 144.9668636),
          destination = c(-37.81659, 144.9841),
          mode = "walking",
          key = "<your valid api key>")


## using address string
get_route(origin = "Flinders Street Station, Melbourne",
         destination = "MCG, Melbourne",
         mode = "walking",
         key = "<your valid api key>")


get_route(origin = "Melbourne Airport, Australia",
         destination = "Portsea, Melbourne, Australia",
         departure_time = as.POSIXct("2016-06-08 07:00:00"),
         waypoints = list(c(-37.81659, 144.9841),
                           via = "Ringwood, Victoria"),
         mode = "driving",
         alternatives = FALSE,
         avoid = c("TOLLS", "highways"),
         units = "imperial",
         key = "<your valid api key>",
         output_format = "data.frame")



}
}

